@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div style="display: flex; height: 100vh;">

    <!-- Menu lateral -->
    <div style="width: 275px; background-color: @menuColor; color: black; padding: 10px; box-shadow: 2px 0 5px rgba(0,0,0,0.1);">
        <h3>BlazorApp</h3>

        <p style="color:black;">Background color: </p>
        <RadzenColorPicker @bind-Value="@backgroundColor" ShowHSV="true" ShowRGBA="false" ShowColors="true" ShowButton="false" />
        <p style="color:black;">Menu color: </p>
        <RadzenColorPicker @bind-Value="@menuColor" ShowHSV="true" ShowRGBA="false" ShowColors="true" ShowButton="false" />
    </div>

    <!-- Conteudo principal -->
    <div style="width:100%; height:100%; background-color:@backgroundColor;">
        <div style="padding: 10px">
            <div style="display: flex; justify-content: flex-start; align-items: center; gap: 20px; margin-bottom: 10px;">
                <div class="page-size-chooser">
                    Items per page:
                    <select @bind="@pagination.ItemsPerPage">
                        <option>5</option>
                        <option>10</option>
                        <option>20</option>
                        <option>50</option>
                    </select>
                </div>
                <button @onclick="ShowAddItemModal">+ Item</button>
            </div>

            <QuickGrid Items="@CuboItems.AsQueryable()" TItem="Cubo" Pagination="pagination">
                <PropertyColumn Property="@(d => d.Name)" Title="Name" Sortable="true" />
                <PropertyColumn Property="@(d => d.Description)" Title="Description" Sortable="false" />
                <PropertyColumn Property="@(d => d.X)" Title="X" Sortable="true" />
                <PropertyColumn Property="@(d => d.Y)" Title="Y" Sortable="true" />
                <PropertyColumn Property="@(d => d.Z)" Title="Z" Sortable="true" />
                <PropertyColumn Property="@(d => d.RotX)" Title="Rotation X" Sortable="true" />
                <PropertyColumn Property="@(d => d.RotY)" Title="Rotation Y" Sortable="true" />
                <PropertyColumn Property="@(d => d.RotZ)" Title="Rotation Z" Sortable="true" />
                <PropertyColumn Property="@(d => d.Scale)" Title="Scale" Sortable="true" />
            </QuickGrid>

            <Paginator State="@pagination" />
        </div>
    </div>
</div>


@if (isAddItemModalVisible)
{
    <div class="modal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: flex; justify-content: center; align-items: center;">
        <div class="modal-content" style="background-color: white; padding: 20px; border-radius: 5px; width: 400px;">
            <h3>Adicionar Novo Item</h3>
            <label>Nome</label>
            <input placeholder="Nome" @bind="newItem.Name" style="width: 100%; margin-bottom: 10px;" />
            <label>Descrição</label>
            <input placeholder="Descrição" @bind="newItem.Description" style="width: 100%; margin-bottom: 10px;" />
            <label>X</label>
            <input placeholder="X" type="number" @bind="newItem.X" style="width: 100%; margin-bottom: 10px;" />
            <label>Y</label>
            <input placeholder="Y" type="number" @bind="newItem.Y" style="width: 100%; margin-bottom: 10px;" />
            <label>Z</label>
            <input placeholder="Z" type="number" @bind="newItem.Z" style="width: 100%; margin-bottom: 10px;" />
            <label>RotX</label>
            <input placeholder="RotX" type="number" @bind="newItem.RotX" style="width: 100%; margin-bottom: 10px;" />
            <label>RotY</label>
            <input placeholder="RotY" type="number" @bind="newItem.RotY" style="width: 100%; margin-bottom: 10px;" />
            <label>RotZ</label>
            <input placeholder="RotZ" type="number" @bind="newItem.RotZ" style="width: 100%; margin-bottom: 10px;" />
            <label>Scale</label>
            <input placeholder="Scale" type="number" @bind="newItem.Scale" style="width: 100%; margin-bottom: 10px;" />
            <button @onclick="SaveNewItem" style="margin-right: 10px;">Salvar</button>
            <button @onclick="CloseAddItemModal">Cancelar</button>
        </div>
    </div>
}

@code {
    private string backgroundColor = "rgb(255, 255, 255)";
    private string menuColor = "rgb(37, 150, 190)";

    public class Cubo
    {
        public string Name { get; set; }
        public string? Description { get; set; }
        public double X { get; set; }
        public double Y { get; set; }
        public double Z { get; set; }
        public double? RotX { get; set; }
        public double? RotY { get; set; }
        public double? RotZ { get; set; }
        public double? Scale { get; set; }
    }
    private bool isAddItemModalVisible = false;
    private Cubo newItem = new Cubo();
    List<Cubo> CuboItems = new List<Cubo>();
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    private void ShowAddItemModal()
    {
        newItem = new Cubo();
        isAddItemModalVisible = true;
    }

    private void CloseAddItemModal() => isAddItemModalVisible = false;

    private void SaveNewItem()
    {
        CuboItems.Add(newItem);
        CloseAddItemModal();
    }
}